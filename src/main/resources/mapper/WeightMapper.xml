<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.lsu.chicken.room.dao.WeightMapper" >
  <resultMap id="BaseResultMap" type="cn.lsu.chicken.room.domain.Weight" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="INTEGER" />
    <result column="delay_time" property="delayTime" jdbcType="INTEGER" />
    <result column="cancel_time" property="cancelTime" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, company_id, update_time, delay_time, cancel_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.lsu.chicken.room.domain.WeightExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from weight
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderList != null">
      order by
      <foreach collection="orderList" item="item" index="index" separator=",">
        ${item}
      </foreach>
    </if>
    <if test="page != null and size!= null">
      limit #{offset},#{size}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from weight
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from weight
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.lsu.chicken.room.domain.WeightExample" >
    delete from weight
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.lsu.chicken.room.domain.Weight" useGeneratedKeys="true" keyProperty="id" >
    insert into weight (company_id, update_time, delay_time, 
      cancel_time)
    values (#{companyId,jdbcType=INTEGER}, #{updateTime,jdbcType=INTEGER}, #{delayTime,jdbcType=INTEGER}, 
      #{cancelTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.lsu.chicken.room.domain.Weight" useGeneratedKeys="true" keyProperty="id" >
    insert into weight
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="delayTime != null" >
        delay_time,
      </if>
      <if test="cancelTime != null" >
        cancel_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="delayTime != null" >
        #{delayTime,jdbcType=INTEGER},
      </if>
      <if test="cancelTime != null" >
        #{cancelTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.lsu.chicken.room.domain.WeightExample" resultType="java.lang.Integer" >
    select count(*) from weight
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update weight
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null" >
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=INTEGER},
      </if>
      <if test="record.delayTime != null" >
        delay_time = #{record.delayTime,jdbcType=INTEGER},
      </if>
      <if test="record.cancelTime != null" >
        cancel_time = #{record.cancelTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update weight
    set id = #{record.id,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER},
      delay_time = #{record.delayTime,jdbcType=INTEGER},
      cancel_time = #{record.cancelTime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lsu.chicken.room.domain.Weight" >
    update weight
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="delayTime != null" >
        delay_time = #{delayTime,jdbcType=INTEGER},
      </if>
      <if test="cancelTime != null" >
        cancel_time = #{cancelTime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lsu.chicken.room.domain.Weight" >
    update weight
    set company_id = #{companyId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      delay_time = #{delayTime,jdbcType=INTEGER},
      cancel_time = #{cancelTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>