<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.lsu.chicken.room.dao.ServiceMapper">
    <resultMap id="BaseResultMap" type="cn.lsu.chicken.room.domain.Service">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="apply_id" property="applyId" jdbcType="INTEGER"/>
        <result column="worker_id" property="workerId" jdbcType="INTEGER"/>
        <result column="apply_time" property="applyTime" jdbcType="TIMESTAMP"/>
        <result column="service_time" property="serviceTime" jdbcType="TIMESTAMP"/>
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, apply_id, worker_id, apply_time, service_time,content
  </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.lsu.chicken.room.domain.ServiceExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from service
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="page != null and size!= null">
            limit #{offset},#{size}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from service
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from service
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="cn.lsu.chicken.room.domain.ServiceExample">
        delete from service
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.lsu.chicken.room.domain.Service" useGeneratedKeys="true" keyProperty="id">
    insert into service (apply_id, worker_id, apply_time, 
      service_time, content)
    values (#{applyId,jdbcType=INTEGER}, #{workerId,jdbcType=INTEGER}, #{applyTime,jdbcType=TIMESTAMP},
      #{serviceTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="cn.lsu.chicken.room.domain.Service" useGeneratedKeys="true"
            keyProperty="id" >
        insert into service
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="applyId != null">
                apply_id,
            </if>
            <if test="workerId != null">
                worker_id,
            </if>
            <if test="applyTime != null">
                apply_time,
            </if>
            <if test="serviceTime != null">
                service_time,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="applyId != null">
                #{applyId,jdbcType=INTEGER},
            </if>
            <if test="workerId != null">
                #{workerId,jdbcType=INTEGER},
            </if>
            <if test="applyTime != null">
                #{applyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="serviceTime != null">
                #{serviceTime,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.lsu.chicken.room.domain.ServiceExample"
            resultType="java.lang.Integer">
        select count(id) from service
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update service
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.applyId != null">
                apply_id = #{record.applyId,jdbcType=INTEGER},
            </if>
            <if test="record.workerId != null">
                worker_id = #{record.workerId,jdbcType=INTEGER},
            </if>
            <if test="record.applyTime != null">
                apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.serviceTime != null">
                service_time = #{record.serviceTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>

        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update service
        set id = #{record.id,jdbcType=INTEGER},
        apply_id = #{record.applyId,jdbcType=INTEGER},
        worker_id = #{record.workerId,jdbcType=INTEGER},
        apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
        service_time = #{record.serviceTime,jdbcType=TIMESTAMP},
        content = #{record.content,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.lsu.chicken.room.domain.Service">
        update service
        <set>
            <if test="applyId != null">
                apply_id = #{applyId,jdbcType=INTEGER},
            </if>
            <if test="workerId != null">
                worker_id = #{workerId,jdbcType=INTEGER},
            </if>
            <if test="applyTime != null">
                apply_time = #{applyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="serviceTime != null">
                service_time = #{serviceTime,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.lsu.chicken.room.domain.Service">
    update service
    set apply_id = #{applyId,jdbcType=INTEGER},
      worker_id = #{workerId,jdbcType=INTEGER},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      service_time = #{serviceTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>